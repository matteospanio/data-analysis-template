[tool.poetry]
name = "{{project_name}}"
version = "0.0.1"
description = "{{project_description}}"
authors = ["{{author}} <{{email}}>"]
license = "{{license}}"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
prefect = "^2.14.5"
pydantic = "^2.5.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.0.0"
ruff = "^0.1.6"
docformatter = "^1.7.5"
pre-commit = "^3.4.0"
black = "^23.9.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--color=yes --doctest-modules --junitxml=junit-report.xml --verbose"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
relative_files = true

[tool.coverage.report]
show_missing = true
omit = [
    "**/__init__.py",
]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug",
    "if settings.DEBUG",
    "if TYPE_CHECKING",
    "if __name__ == .__main__.:",
]

[tool.docformatter]
recursive = true
wrap-summaries = 88
blank = true

[tool.ruff]
line-length = 88
src = ["src", "tests"]
extend-exclude = ["docs"]
select =[
    "A",    # builtins
    "B",    # bugbear
    "BLE",  # blind exception
    "C4",   # comprehensions
    "C90",
    "COM",  # commas
    "D",    # pydocstyle
    "DTZ",  # datetime
    "E",    # pycodestyle
    "EM",   # error messages
    "F",    # pyflakes
    "G",    # logging
    "I",    # isort
    "PIE",  # flake-8 pie
    "PL",   # pylint
    "PT",   # pytest
    "PTH",  # use pathlib
    "N",    # pep-naming
    "RUF",  # ruff specific rules
    "S",    # bandit
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle warning
]
fixable = ["ALL"]
target-version = "py38"

[tool.ruff.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.ruff.pylint]
max-args = 6
max-returns = 5

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "RUF", "S", "A", "PLR6301", "PLR2004"]

[tool.black]
color = true
line-length = 88
target-version = ["py38"]
extend-exclude = '''
(
  ^/docs/.*$   # exclude docs
  | .*_pb2.py  # exclude autogenerated protobuf files
)
'''
